class Solution {
public:
    int longest(int i,int n,vector<int>&nums,int j,vector<vector<int>>&dp){
        if(i>=n){
            return 0;
        }
        if(dp[i][j+1]!=-1) return dp[i][j+1];
        int p1=0,p2=0;
        if(j==-1 || nums[j]<nums[i]){   
            p1=1+longest(i+1,n,nums,i,dp);  
            
        }
        p2=longest(i+1,n,nums,j,dp);
        
        
        return dp[i][j+1]=max(p1,p2);
    }
    int lengthOfLIS(vector<int>& nums) {
        vector<int>v;
        vector<vector<int>>dp(nums.size(),vector<int>(nums.size()+1,-1));
        return longest(0,nums.size(),nums,-1,dp);
    }
};
